/*
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildFeatures {
        dataBinding = true
    }
    defaultConfig {
        applicationId "com.google.samples.apps.sunflower_java"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
//        testInstrumentationRunner "com.google.samples.apps.sunflower.utilities.MainTestRunner"
        versionCode 1
        versionName "0.1.6"
        vectorDrawables.useSupportLibrary true

        // Consult the README on instructions for setting up Unsplash API key
        buildConfigField("String", "UNSPLASH_ACCESS_KEY", "\"" + getUnsplashAccess() + "\"")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    kotlinOptions {
//        // work-runtime-ktx 2.1.0 and above now requires Java 8
//        jvmTarget = "1.8"
//
//        // Enable Coroutines and Flow APIs
//        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
//        freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
//    }
}
configurations {
//这里要排除到这个包，这个包会与 com.google.guava 冲突，导致编译不过
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

dependencies {

//    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"


    implementation "androidx.lifecycle:lifecycle-common:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-core:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$rootProject.lifecycleVersion"


    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$rootProject.assistedInjectVersion"
//    kapt "androidx.room:room-compiler:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
//    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"
    annotationProcessor "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    annotationProcessor "androidx.hilt:hilt-compiler:$rootProject.hiltViewModelVersion"
    annotationProcessor "com.squareup.inject:assisted-inject-processor-dagger2:$rootProject.assistedInjectVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
//    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"
    implementation 'androidx.core:core:1.3.2'
//    implementation 'androidx.core:core-animation:1.0.0'

    implementation "androidx.fragment:fragment:$rootProject.fragmentVersion"
//    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentVersion"


    implementation "androidx.navigation:navigation-fragment:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui:$rootProject.navigationVersion"

//    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
//    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

//    implementation "androidx.paging:paging-common:$rootProject.pagingVersion"
    implementation "androidx.paging:paging-runtime:$rootProject.pagingVersion"
//    implementation "androidx.paging:paging-runtime-ktx:$rootProject.pagingVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerViewVersion"
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
//    implementation "androidx.room:room-common:$rootProject.roomVersion"
//    implementation "androidx.room:room-ktx:$rootProject.roomVersion"

    implementation "androidx.viewpager2:viewpager2:$rootProject.viewPagerVersion"
    implementation "androidx.work:work-runtime:$rootProject.workVersion"
//    implementation "androidx.work:work-runtime-ktx:$rootProject.workVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLoggingVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$rootProject.hiltViewModelVersion"



}

def getUnsplashAccess() {
    return project.findProperty("unsplash_access_key")
}
